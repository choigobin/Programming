/*
멤버변수(인스턴스 변수) 초기화
1.명시적 초기화
	변수를 선언함과 동시에 초기화한다.
	ex) int x = 4; Engine e = new Engine();
2.생성자를 이용한 초기화
3.초기화 블럭
	-인스턴스 초기화 블럭 : {}
		>생성자에서 공통적으로 수행되는 작업에 사용
		>인스턴스 생성될 때마다 실행(단, 생성자보다 먼저 실행됨)
		>인스턴스 변수의 초기화는 주로 생성자를 사용하기 때문에, 
		인스턴스 초기화 블럭은 잘 사용되지 않는다.대신 클래스의 
		모든 생성자에서 공통적으로 수행되어져야 하는 코드가 있는 경우 
		생성자에 넣지 않고 인스턴스 초기화 블럭에 넣어 두면 코드의 중복을 줄일 수 있다.
	-클래스(정적) 초기화 블럭 : static{}
		>클래스 변수의 복잡한 초기화에 사용
		>클래스 로딩시에 실행
 */

class AA{
	int x; // 인스턴스(객체)가 생성 될때 만들어지기 때문에 인스턴스 변수라고도 함

	static{ //정적 초기화 블럭
		System.out.println("정적 초기화 블럭");
	}
	{ //인스턴스 초기화 블럭 ( 명시적  초기화와 크게 다를게 없다.)

		System.out.println("인스턴스 초기화 블럭");
	}
	AA(){ //생성자를 이용한 초기화

		System.out.println("생성자를 이용한 초기화");
	}
	
	// 초기화 블럭 실행 순서 주의! 
	
	void data() {
		int x = 0;
	}
	
}
public class Exam_03 {
	public static void main(String[] args) {
		System.out.println("하하");
		AA a = new AA();
		AA b = new AA();
		
		
	}
}